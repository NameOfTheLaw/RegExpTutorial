{
  "stages": [
    {
      "name": "Знакомство с синтаксисом",
      "description": "<p>Приступая к знакомству с регулярными выражениями, стоит начать с того, что само по себе регулярное выражения является обычной строкой.</p> <p>Написав обычную строку и использовав её как регулярное выражение, можно, например, провести поиск слов в некотором тексте.</p>",
      "dictionary_last_index": 0,
      "text": "Которых опровергается, как правило, в силу закона вина доля. Достаточно сильное методы определения их радиоизлучение. Объект нужно искать в этой полосе около. Друг к опровергается, как мы указывали выше, динамическими соображениями сила радиотелескопов неве­лика. Больше, чем у таких звезд с высокими. Была выдвинута гипотеза о так как правило, наблюдались лишь. Другой стороны, оптически наблюдать объекты нельзя решить, какой именно из 1950. Объект нужно искать в все-таки слишком слабым, останется неуловимым температурами, а доля.",
      "task": "<p>Найдите в тексте все повторения слова \"правило\".</p>",
      "regexp": "правило"
    },
    {
      "name": "Любой символ",
      "description": "<p>Иногда может быть полезным использования обозначения любого символа. Например, в текстовом поле могут быть использованы любые символы, и мы хотим выделить их с помощью регулярных выражений.</p><p>Для этих целей в регулярных выражениях используется <code>.</code>. При этом, чтобы обозначить символ отдельной точки используется <code>\\.</code>.</p>",
      "dictionary_last_index": 2,
      "text": "- до каких пор задания в этом курсе будут настолько скучными?\n - пока после буквы д стоит пробел, но регулярное выражение, все равно его обработает. Также будет и с д4, например.",
      "task": "<p>Найдите в строке любые два подряд идущие символа, первый из которых это символ \"д\".</p>",
      "regexp": "д."
    },
    {
      "name": "Цифра",
      "description": "<p>Конечно, цифры в регулярных выражениях можно использовать напрямую, однако это не всегда удовлетворяет условиям поставленной задачи.</p><p>Поэтому, можно использовать обозначение <code>\\d</code>, которое обозначает любую цифру.</p>",
      "dictionary_last_index": 3,
      "text": "Исторический текст, в котором много дат. Например, первый перепрограммируемый электронный цифровой вычислитель общего назначения (компьютер) появился в 1945 году. А начало эпохи UNIX принято считать 0 часов, 0 минут, 0 секунд 1 января 1970 года.",
      "task": "<p>Найдите в тексте все числа, состоящие из четырех цифр.</p>",
      "regexp": "\\d\\d\\d\\d"
    },
    {
      "name": "Один из множества элементов",
      "description": "<p><code>[...]</code> указывает на лишь на один из элементов внутри <code>[]</code>. Также, внутри <code>[]</code > можно использовать любые другие конструкции регулярных выражений.</p>",
      "dictionary_last_index": 4,
      "text": "Которых опровергается, как правило, в силу закона вина доля. Достаточно сильное методы определения их радиоизлучение. Объект нужно искать в этой полосе около. Друг к опровергается, как мы указывали выше, динамическими соображениями сила радиотелескопов неве­лика. Больше, чем у таких звезд с высокими. Была выдвинута гипотеза о так как правило, наблюдались лишь. Другой стороны, оптически наблюдать объекты нельзя решить, какой именно из 1950. Объект нужно искать в все-таки слишком слабым, останется неуловимым температурами, а доля.",
      "task": "<p>Найдите в тексте все сочетания букв из этого списка: аб, ав.</p>",
      "regexp": "а[бв]"
    },
    {
      "name": "Любой символ, кроме",
      "description": "<p>Полезным бывает использование любых символов и цифр, кроме нескольких конкретных \"нежелательных\" символов.</p><p>Для этих целей применяются те же скобки <code>[...]</code>, но с дополнительным символом после первой скобки: <code>[^...]</code>.</p>",
      "dictionary_last_index": 5,
      "text": "Которых опровергается, как правило, в силу закона вина доля. Достаточно сильное методы определения их радиоизлучение. Объект нужно искать в этой полосе около. Друг к опровергается, как мы указывали выше, динамическими соображениями сила радиотелескопов неве­лика. Больше, чем у таких звезд с высокими. Была выдвинута гипотеза о так как правило, наблюдались лишь. Другой стороны, оптически наблюдать объекты нельзя решить, какой именно из 1950. Объект нужно искать в все-таки слишком слабым, останется неуловимым температурами, а доля.",
      "task": "<p>Найдите в тексте все сочетания букв, начинающиеся символом а и заканчивающиеся любым символом, кроме б и в.</p>",
      "regexp": "а[^бв]"
    },
    {
      "name": "Интервал цифр, букв",
      "description": "<p>Перечислять все возможные буквы или символы в <code>[абвгдеёжзийклм]</code> не всегда удобно. Поэтому существует конструкция для записи интервалов возможных символов.</p><p><code>[а-д]</code> будет обозначать один символ из списка а, б, в, г, д. А конструкция <code>[2-6]</code> - все цифры от 2 до 6.</p><p>Полезной является возможность указывать несколько интервалов в одних скобках, например, <code>[a-zA-Z]</code> будет указывать на любую букву английского алфавита в нижнем или верхнем регистре.</p>",
      "dictionary_last_index": 6,
      "text": "Листинг игры в морской бой: а9, к0, я7, А2, а3, Z9, в4",
      "task": "<p>Выделите все корректные выстрелы в игре <a class=\"inline-link\" href=\"https://ru.wikipedia.org/wiki/%D0%9C%D0%BE%D1%80%D1%81%D0%BA%D0%BE%D0%B9_%D0%B1%D0%BE%D0%B9_(%D0%B8%D0%B3%D1%80%D0%B0)\">морской бой</a>.</p><p>ВАЖНЫМ замечанием является то, что строки нумеруются от 0 до 9.</p>",
      "regexp": "[а-кА-К][0-9]"
    },
    {
      "name": "Операция или",
      "description": "<p>Часто бывают случаи, когда требуется обозначить не только один элемент из некоторого множества, но и операцию выбора между двумя более сложными конструкциями.</p><p>Для таких случаев, используется конструкция с символом <code>|</code>, где до и после него находятся два взаимоисключающих варианта.</p><p>Например, <code>лев|тигр</code> - укажет либо на тигра, либо на льва.</p><p>Можно использовать более двух вариантов: <code>да|нет|¯\\_(ツ)_/¯</code>.</p>",
      "dictionary_last_index": 7,
      "text": "тот, кто атакует историю России до 17-го года, атакует Россию, тот, кто атакует историю советского периода атакует Россию. Но нельзя говорить, что тот, кто атакует историю советского периода, атакует Россию, но при этом если атакует историю России до 17-го года, что он говорит абсолютную истину.",
      "task": "<p>Выделите в речи председателя Государственной Думы РФ VII созыва слова \"тот\", \"кто\" и \"атакует\".</p>",
      "regexp": "тот|кто|атакует"
    },
    {
      "name": "Квантификаторы",
      "description": "<p>Пусть название темы вас не пугает, все достаточно просто. Иногда количество повторений тех или иных символов нам неизвестно. В такой ситуации можно использовать один из следующих квантификаторов, которые записываются после символа.</p><p><code>?</code> используется при повторениях элемента 0 или 1 раз.</p><p><code>+</code> используется при повторениях элемента 1 и более раз.</p><p><code>*</code> используется при любом числе повторений элемента <span class=\"secondary-text\">(0, 1 или более)</span>.</p><p>Например, <code>[а-яА-я]+</code> сможет выделить в тексте слова на русском языке <span class=\"secondary-text\">(это можно проверить, просто вставив регулярку в поле ввода)</span></p>",
      "dictionary_last_index": 10,
      "text": "Исторический текст, в котором много дат. Например, первый перепрограммируемый электронный цифровой вычислитель общего назначения (компьютер) появился в 1945 году. А начало эпохи UNIX принято считать 0 часов, 0 минут, 0 секунд 1 января 1970 года.",
      "task": "<p>В прошлый раз мы выделяли в этом тексте четырехзначные числа, теперь попробуйте выделить все числа в тексте, используя подходящий квантификатор.</p>",
      "regexp": "\\d+"
    },
    {
      "name": "Квантификаторы, продолжение",
      "description": "<p>Теперь стоит рассмотреть еще один квантификатор, который представляет из себя один или два целых числовых параметра в фигурных скобках <code>{}</code>.</p><p>Первый случай <code>{n}</code> показывает, что элемент будет повторен ровно n раз.</p><p><code>{n,m}</code> показывает, что элемент будет повторен от n до m раз.</p><p>{n,} показывает, что элемент будет повторен n и более раз.</p><p>{,n} показывает, что элемент будет повторен от 0 до n раз.</p>",
      "dictionary_last_index": 14,
      "text": "Исторический текст, в котором много дат. Например, первый перепрограммируемый электронный цифровой вычислитель общего назначения (компьютер) появился в 1945 году. А начало эпохи UNIX принято считать 0 часов, 0 минут, 0 секунд 1 января 1970 года.",
      "task": "<p>Используя квантификатор, опишите регулярное выражение, которое сможет выделять года в тексте, по крайне мере ближайшие почти 8000 лет. <span class=\"secondary-text\">Хотя можно написать выражение, которое будет определять год в тексте и 8000 лет спустя.</span></p>",
      "regexp": "\\d{4}"
    },
    {
      "name": "Группы",
      "description": "<p>Мы подошли к очень важному разделу - группам в регулярных выражениях.</p><p>Мы можем выделять некоторые части регулярного выражения в независимые блоки или группы. Причем, делается это крайне просто: необходимо лишь поместить необходимую часть выражения в круглые скобки <code>()</code>.</p><p>Одной из самых приятных вещей является возможность применения всех изученных нами конструкций к группам.</p><p>Например, мы можем применять квантификаторы уже не к отдельным символам, а к целой группе.</p><p>В данном случае: <code>(ах|ха)+</code> сможет выделять, например, \"ахха\", \"ахахах\" и др.</p>",
      "dictionary_last_index": 15,
      "text": "А я одной тобой любуюсь, и сама не знаешь ты, *внезапная корова появилась в тексте* что красотой затмишь любую королеву красоты *внезапной корове в тексте захотелось выпить воды*. И я иду к тебе навстречу, и я несу тебе цветы, *внезапная корова покидает текст* как единственной на свете королеве красоты.",
      "task": "<p>Попробуйте найти в тексте все слова: королева и корова в любых падежах<span class=\"secondary-text\">, т.е. с любыми окончаниями</span>.</p><p>ПОДСКАЗКА: стоит применить квантификатор к группе. <span class=\"secondary-text\">Но это не обязательно.</span></p>",
      "regexp": "коро(ле)?в[аеу]"
    },
    {
      "name": "Телефонный номер",
      "description": "<p>После того как мы изучили основные конструкции регулярных выражений, стоит перейти к практике.</p><p>Попробуем выделить телефонные номера по заданному шаблону.</p><p>Стоит также указать, кое-что важное: вы уже заметили, что в регулярных выражениях используется множество управляющих символов <code>?+*{}()\\.</code> <span class=\"secondary-text\">и другие</span>, но иногда эти самые символы могут понадобиться в самом регулярном выражении.</p><p>Для того, чтобы символ воспринимался как символ, а не управляющая конструкция, следует использовать символ экранирования <code>\\</code> перед управляющим символов.</p><p>Например, <code>\\\\ \\? \\+ \\* \\{ \\} \\( \\)</code>.</p>",
      "dictionary_last_index": 15,
      "text": "Виктор: +7 1234 456-78-90; Николай: 8 987 654-32-10; Кристина: +11 98 654-32-10; Антон: 89876543210; Анастасия: +12 999 111-11-11; Кристина: +7 987 654-3210.",
      "task": "<p>Напишите регулярку, которая сможет выделять только номера, подходящие под следующий шаблон: <code>+код_страны код_города 111-11-11</code>, где <code>код_страны</code> и <code>код_города</code> - это числа любой длины.</p>",
      "regexp": "\\+\\d+ \\d+ \\d{3}-\\d{2}-\\d{2}"
    },
    {
      "name": "Валидация даты",
      "description": "<p>Теперь попробуем проверить даты.</p>",
      "dictionary_last_index": 15,
      "text": "31.12.1999, 32.12.2000, 11.13.2000, 04.7.2005, 04.07.2005, 5.6.1565, 05.06.1565, 00.00.2007",
      "task": "<p>Напишите регулярку, которая сможет выделять токлько корректные даты, удовлетворяющиее следующему шаблону: <code>DD.MM.YYYY</code>, где <code>DD</code> - двузначная запись дня, <code>MM</code> - двузначная запись месяца, <code>YYYY</code> - четырехзначная запись года. Разделители в данном случае не принципиальны и можно использовать обозначение <code>.</code> любого символа.</p><p>ПОДСКАЗКА: для ограничения на кол-во дней и месяцев удобно использовать конструкцию <code>|</code></p>",
      "regexp": "(0[1-9]|[12][0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}"
    }
  ],
  "dictionary": [
    {
      "regexp": "абв",
      "explanation": "строка абв"
    },
    {
      "regexp": ".",
      "explanation": "любой символ"
    },
    {
      "regexp": "\\.",
      "explanation": "точка"
    },
    {
      "regexp": "\\d",
      "explanation": "любая цифра"
    },
    {
      "regexp": "[абв]",
      "explanation": "один из элементов а, б или в"
    },
    {
      "regexp": "[^абв]",
      "explanation": "любой символ кроме а, б и в"
    },
    {
      "regexp": "[а-яА-Я0-9]",
      "explanation": "любая буква русского алфавита (в нижнем или верхнем регистре) или цифра"
    },
    {
      "regexp": "аб|вг",
      "explanation": "либо аб, либо вг <span class=\"secondary-text\">(ислючающее или)</span>"
    },
    {
      "regexp": "а?",
      "explanation": "1 или 0 символов а"
    },
    {
      "regexp": "а+",
      "explanation": "1 или много символов а"
    },
    {
      "regexp": "а*",
      "explanation": "любое число символов а или его отсутствие"
    },
    {
      "regexp": "а{n}",
      "explanation": "символ а, повторенный n раз"
    },
    {
      "regexp": "а{n,m}",
      "explanation": "символ а, повторенный от n до m раз"
    },
    {
      "regexp": "а{n,}",
      "explanation": "символ а, повторенный n и более раз"
    },
    {
      "regexp": "а{,m}",
      "explanation": "символ а, повторенный от 0 до m раз"
    },
    {
      "regexp": "(...)",
      "explanation": "группа внутри регулярного выражения"
    }
  ],
  "finishPopup": {
    "title": "Отлично!",
    "content": [
      "Поздравляем с успешным завершение курса по регулярным выражениям!",
      "За этим понятием скрывается на самом деле гораздо больше, чем может показаться на первый взгляд. Поэтому, если у вас есть желание, то вы можете изучить еще множество других материалов по этой теме!",
      "<span class=\"secondary-text\">tsibin.andr@gmail.com, <a class=\"github-link\" href=\"https://github.com/NameOfTheLaw\">github</a></span>"
    ]
  }
}
